How to deploy to surge:
-npm run build
-cd into the dist directory 
-surge --domain ng-budget.surge.sh

Everyday:
-Always have the unit tests running
-Deploy at the end of each session assuming unit tests aren't breaking 
and lint isn't failing.

Plan:
-have add new category button work with keyboard (enter key)


-the monthly budget numbers are not correct. It's still doing it by year and not the time period I specified.  
-implement exporting and importing budgets.
-We need to also be able to view the start and end dates of a budget as quick reference. 
-write e2e tests 

-remove heading that shows budget totals 
-group the end to end tests in a logical manner



-write unit tests for side effects
-unit test actions creator service 
-prevent navigating to earlier months than begin date.  Same 
with end date. 
-prevent going ahead to months that are in the future. 
-Use constants for your action types
-write unit tests for dumb components
-need to write a ton of documentation



Animate:
-graphs should animate using d3
-use fade in animation for changing budgets and going from 
one month to the next month
-when viewing transactions for a category have it come up from
the bottom.  Alternatively fade in animation is fine too
-when viewing create new budget screen fade in animation. 


read
-https://bost.ocks.org/mike/join/
-https://bost.ocks.org/mike/circles/
-https://bost.ocks.org/mike/selection/
-https://bost.ocks.org/mike/d3/workshop/#33



-https://material.io/icons/



-maybe in the future you can have 3 media query breakpoints:
  -desktop: would show both side navs
  -tablet: would only show the reporting nav 
  -phone: would show no navs


-Have the router prevent you from going to the 
main budget page if you haven't created a budget 
yet.  
-Explore adding an interface to the action in the reducers 

-make keyboard accessible
-make screenreader accessible

-fix linting errors 
-Have travisci or circleci run protractor tests and unit tests before it deploys
 using surge.
-prevent writing to master (require doing PRs to master)
-implement optimistic concurrency.  This will work well since you are generating
 the ids on the client side. 
-handle logging (maybe there's a few logging service, or at least free bug tracking)
-router edge cases (invalid month, year in the url) 
-use css resets
-use consistent font throughout the app. 
-fix double scrollbar issue 
-refactor category component to take in the whole object rather than passing 
sub properties off of the whole object. 
-cool feature: have the ability to move a transaction to a previous or next month.
So just add <, > buttons per row that do this.  
