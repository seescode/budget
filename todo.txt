How to deploy to surge:
-npm run build
-cd into the dist directory 
-surge --domain ng-budget.surge.sh

Everyday:
-Always have the unit tests running
-Deploy at the end of each session assuming unit tests aren't breaking 
and lint isn't failing.

Plan:
-write unit tests for reducers 



-prevent duplicate categories from being added 
-unit test actions creator service 
-prevent navigating to earlier months than begin date.  Same 
with end date. 
-prevent going ahead to months that are in the future. 
-research how to do angular2 forms.
-Use constants for your action types
-write unit tests for dumb components
-write end to end tests instead of smart component unit tests 
-implement exporting and importing budgets 




Animate:
-graphs should animate using d3
-use fade in animation for changing budgets and going from 
one month to the next month
-when viewing transactions for a category have it come up from
the bottom.  Alternatively fade in animation is fine too
-when viewing create new budget screen fade in animation. 


-need to revisit my pie data setup.  I don't think using angular2 
to rerender the data makes any sense.  You're going to have to do
it the d3 way with the enter, update, exit crap.  

read
-https://bost.ocks.org/mike/join/
-https://bost.ocks.org/mike/circles/
-https://bost.ocks.org/mike/selection/
-https://bost.ocks.org/mike/d3/workshop/#33


pie 
-Add labels to each slice of the pie.  Have the label say the 
 amount in dollars
  -https://bl.ocks.org/mbostock/3887235
-Bind to the real data   
  -update the ngrx selectors 
-Animate!  
  -any time you add a new transaction have it update 


-https://material.io/icons/



-create 2 d3 pie charts: one for total budget and the other 
one for monthly budget which would also include in it the 
surplus.  You could also get fancy with the total budget 
pie chart for each month to have a unique color.  
http://bl.ocks.org/dbuezas/9306799
-we should have a small button that switches the view of 
the d3 pie charts.  Expanded or collapsed.  Collapsed would 
be a simple bar with colors.  No explanations at all.  

-Add headings to the pie charts. 



-maybe in the future you can have 3 media query breakpoints:
  -desktop: would show both side navs
  -tablet: would only show the reporting nav 
  -phone: would show no navs




-https://material.io/icons/





-Have the router prevent you from going to the 
main budget page if you haven't created a budget 
yet.  
-Explore adding an interface to the action in the reducers 

-make keyboard accessible
-make screenreader accessible

-fix linting errors 
-create protractor tests that create a budget from scratch and then creates
 transactions.  It verifies that the calculated values are correct at the top.
 Then destroys the budget.  
-Have travisci or circleci run protractor tests and unit tests before it deploys
 using surge.
-prevent writing to master (require doing PRs to master)
-implement optimistic concurrency.  This will work well since you are generating
 the ids on the client side. 
-handle logging (maybe there's a few logging service, or at least free bug tracking)
-router edge cases (invalid month, year in the url) 

